1.      Write a MongoDB query to create a user “CUSTOMER1” and grant the read role in the INVOICE database.
invoice> db.createUser({user:"CUSTOMER1",pwd:"fri@123",roles:[{role:"read",db:"INVOICE"}]})
{ ok: 1 }


2.      Write a MongoDB query to create the backup for the INVOICE database.

(base) ksb@ksb-H410M-H-V2:~$ mongodump --db=invoice --out=~/invoice_backup
2025-04-22T14:23:36.395+0530	writing invoice.PRODUCT to ~/invoice_backup/invoice/PRODUCT.bson
2025-04-22T14:23:36.399+0530	done dumping invoice.PRODUCT (2 documents)
2025-04-22T14:23:36.400+0530	writing invoice.CUSTOMER to ~/invoice_backup/invoice/CUSTOMER.bson
2025-04-22T14:23:36.400+0530	done dumping invoice.CUSTOMER (5 documents)

3.      Write a MongoDB query to restore a particular database or a collection.

(base) ksb@ksb-H410M-H-V2:~$ mongorestore --db invoice /home/ksb/~/invoice_backup/invoice
2025-04-22T14:24:34.707+0530	The --db and --collection flags are deprecated for this use-case; please use --nsInclude instead, i.e. with --nsInclude=${DATABASE}.${COLLECTION}
2025-04-22T14:24:34.707+0530	building a list of collections to restore from /home/ksb/~/invoice_backup/invoice dir
2025-04-22T14:24:34.708+0530	reading metadata for invoice.CUSTOMER from /home/ksb/~/invoice_backup/invoice/CUSTOMER.metadata.json
2025-04-22T14:24:34.708+0530	reading metadata for invoice.PRODUCT from /home/ksb/~/invoice_backup/invoice/PRODUCT.metadata.json
2025-04-22T14:24:34.710+0530	restoring to existing collection invoice.CUSTOMER without dropping
2025-04-22T14:24:34.710+0530	restoring to existing collection invoice.PRODUCT without dropping
2025-04-22T14:24:34.710+0530	restoring invoice.CUSTOMER from /home/ksb/~/invoice_backup/invoice/CUSTOMER.bson
2025-04-22T14:24:34.710+0530	restoring invoice.PRODUCT from /home/ksb/~/invoice_backup/invoice/PRODUCT.bson
2025-04-22T14:24:34.718+0530	continuing through error: E11000 duplicate key error collection: invoice.PRODUCT index: _id_ dup key: { _id: ObjectId('67fe2efbf7473387b4ef6357') }
2025-04-22T14:24:34.718+0530	continuing through error: E11000 duplicate key error collection: invoice.PRODUCT index: _id_ dup key: { _id: ObjectId('67fe2efbf7473387b4ef6358') }
2025-04-22T14:24:34.719+0530	continuing through error: E11000 duplicate key error collection: invoice.CUSTOMER index: _id_ dup key: { _id: ObjectId('67fe2ef2f7473387b4ef6354') }
2025-04-22T14:24:34.719+0530	continuing through error: E11000 duplicate key error collection: invoice.CUSTOMER index: _id_ dup key: { _id: ObjectId('67fe2ef2f7473387b4ef6355') }
2025-04-22T14:24:34.719+0530	continuing through error: E11000 duplicate key error collection: invoice.CUSTOMER index: _id_ dup key: { _id: ObjectId('67ff72cb680736b5b0ef634b') }
2025-04-22T14:24:34.719+0530	continuing through error: E11000 duplicate key error collection: invoice.CUSTOMER index: _id_ dup key: { _id: ObjectId('67ff72cb680736b5b0ef634c') }
2025-04-22T14:24:34.719+0530	continuing through error: E11000 duplicate key error collection: invoice.CUSTOMER index: _id_ dup key: { _id: ObjectId('67ff72cb680736b5b0ef634d') }
2025-04-22T14:24:34.722+0530	finished restoring invoice.CUSTOMER (0 documents, 5 failures)
2025-04-22T14:24:34.722+0530	finished restoring invoice.PRODUCT (0 documents, 2 failures)
2025-04-22T14:24:34.722+0530	no indexes to restore for collection invoice.CUSTOMER
2025-04-22T14:24:34.722+0530	no indexes to restore for collection invoice.PRODUCT
2025-04-22T14:24:34.722+0530	0 document(s) restored successfully. 7 document(s) failed to restore.

4.      Write a MongoDB query to create an index for the collection customer using the field customer_name.

use invoice;
switched to db invoice
invoice> db.customer.createIndex({ cname:1})
cname_1
invoice> db.customer.getIndexes();
[
  { v: 2, key: { _id: 1 }, name: '_id_' },
  { v: 2, key: { cname: 1 }, name: 'cname_1' }
]
invoice> 
